// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="prodMat,hls_ip_2018_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.625000,HLS_SYN_LAT=155,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=100,HLS_SYN_FF=5678,HLS_SYN_LUT=2570,HLS_VERSION=2018_2}" *)

module prodMat (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        R_address0,
        R_ce0,
        R_we0,
        R_d0,
        R_address1,
        R_ce1,
        R_we1,
        R_d1,
        A_address0,
        A_ce0,
        A_q0,
        A_address1,
        A_ce1,
        A_q1,
        B_address0,
        B_ce0,
        B_q0,
        B_address1,
        B_ce1,
        B_q1
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_pp0_stage0 = 17'd2;
parameter    ap_ST_fsm_pp0_stage1 = 17'd4;
parameter    ap_ST_fsm_pp0_stage2 = 17'd8;
parameter    ap_ST_fsm_pp0_stage3 = 17'd16;
parameter    ap_ST_fsm_pp0_stage4 = 17'd32;
parameter    ap_ST_fsm_pp0_stage5 = 17'd64;
parameter    ap_ST_fsm_pp0_stage6 = 17'd128;
parameter    ap_ST_fsm_pp0_stage7 = 17'd256;
parameter    ap_ST_fsm_pp0_stage8 = 17'd512;
parameter    ap_ST_fsm_pp0_stage9 = 17'd1024;
parameter    ap_ST_fsm_pp0_stage10 = 17'd2048;
parameter    ap_ST_fsm_pp0_stage11 = 17'd4096;
parameter    ap_ST_fsm_pp0_stage12 = 17'd8192;
parameter    ap_ST_fsm_pp0_stage13 = 17'd16384;
parameter    ap_ST_fsm_pp0_stage14 = 17'd32768;
parameter    ap_ST_fsm_state21 = 17'd65536;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] R_address0;
output   R_ce0;
output   R_we0;
output  [31:0] R_d0;
output  [5:0] R_address1;
output   R_ce1;
output   R_we1;
output  [31:0] R_d1;
output  [5:0] A_address0;
output   A_ce0;
input  [31:0] A_q0;
output  [5:0] A_address1;
output   A_ce1;
input  [31:0] A_q1;
output  [4:0] B_address0;
output   B_ce0;
input  [31:0] B_q0;
output  [4:0] B_address1;
output   B_ce1;
input  [31:0] B_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] R_address0;
reg R_ce0;
reg R_we0;
reg[31:0] R_d0;
reg[5:0] R_address1;
reg R_ce1;
reg R_we1;
reg[31:0] R_d1;
reg[5:0] A_address0;
reg A_ce0;
reg[5:0] A_address1;
reg A_ce1;
reg[4:0] B_address0;
reg B_ce0;
reg[4:0] B_address1;
reg B_ce1;

(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [3:0] i_reg_475;
reg  signed [31:0] reg_486;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state18_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] exitcond2_reg_1068;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state20_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state11_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state13_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state15_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_11001;
reg  signed [31:0] reg_490;
reg  signed [31:0] reg_494;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state19_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state10_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state12_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state14_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_11001;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state16_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_11001;
reg  signed [31:0] reg_498;
wire   [31:0] grp_fu_502_p2;
reg   [31:0] reg_527;
wire   [31:0] grp_fu_507_p2;
reg   [31:0] reg_531;
wire   [31:0] grp_fu_512_p2;
reg   [31:0] reg_535;
wire   [31:0] grp_fu_517_p2;
reg   [31:0] reg_539;
wire   [31:0] grp_fu_522_p2;
reg   [31:0] reg_543;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state17_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] exitcond2_fu_559_p2;
reg   [0:0] exitcond2_reg_1068_pp0_iter1_reg;
wire   [3:0] i_1_fu_565_p2;
reg   [3:0] i_1_reg_1072;
wire   [6:0] tmp_3_fu_587_p2;
reg   [6:0] tmp_3_reg_1077;
reg   [6:0] tmp_3_reg_1077_pp0_iter1_reg;
wire  signed [6:0] tmp_10_fu_613_p2;
reg  signed [6:0] tmp_10_reg_1086;
reg  signed [31:0] A_load_reg_1114;
reg  signed [31:0] A_load_1_reg_1122;
reg  signed [31:0] A_load_2_reg_1140;
reg  signed [31:0] A_load_4_reg_1148;
reg  signed [31:0] A_load_3_reg_1156;
reg  signed [31:0] A_load_5_reg_1165;
wire   [31:0] grp_fu_675_p2;
reg   [31:0] tmp_5_0_5_reg_1173;
wire   [31:0] grp_fu_553_p2;
reg   [31:0] tmp1_reg_1178;
wire   [31:0] grp_fu_680_p2;
reg   [31:0] tmp_5_1_reg_1183;
wire   [31:0] tmp4_fu_695_p2;
reg   [31:0] tmp4_reg_1188;
wire   [31:0] grp_fu_685_p2;
reg   [31:0] tmp_5_1_1_reg_1193;
wire   [31:0] grp_fu_690_p2;
reg   [31:0] tmp_5_1_2_reg_1198;
wire   [31:0] grp_fu_700_p2;
reg   [31:0] tmp_5_1_4_reg_1203;
wire   [31:0] tmp5_fu_709_p2;
reg   [31:0] tmp5_reg_1208;
wire   [31:0] tmp8_fu_724_p2;
reg   [31:0] tmp8_reg_1213;
wire   [31:0] grp_fu_714_p2;
reg   [31:0] tmp_5_2_reg_1218;
wire   [31:0] grp_fu_719_p2;
reg   [31:0] tmp_5_2_1_reg_1223;
wire   [31:0] grp_fu_729_p2;
reg   [31:0] tmp_5_2_2_reg_1228;
wire   [31:0] grp_fu_734_p2;
reg   [31:0] tmp_5_2_4_reg_1233;
wire   [31:0] grp_fu_739_p2;
reg   [31:0] tmp_5_2_5_reg_1238;
wire   [31:0] tmp9_fu_753_p2;
reg   [31:0] tmp9_reg_1243;
wire   [31:0] grp_fu_744_p2;
reg   [31:0] tmp_5_3_reg_1248;
wire   [31:0] tmp10_fu_768_p2;
reg   [31:0] tmp10_reg_1253;
wire   [31:0] grp_fu_758_p2;
reg   [31:0] tmp_5_3_1_reg_1258;
wire   [31:0] grp_fu_763_p2;
reg   [31:0] tmp_5_3_2_reg_1263;
wire   [31:0] grp_fu_772_p2;
reg   [31:0] tmp_5_3_4_reg_1268;
wire   [31:0] grp_fu_777_p2;
reg   [31:0] tmp_5_3_5_reg_1273;
wire   [31:0] tmp13_fu_786_p2;
reg   [31:0] tmp13_reg_1278;
wire   [31:0] tmp14_fu_791_p2;
reg   [31:0] tmp14_reg_1283;
wire   [31:0] grp_fu_795_p2;
reg   [31:0] tmp_5_0_3_reg_1288;
reg  signed [31:0] B_load_21_reg_1293;
reg  signed [31:0] B_load_27_reg_1298;
reg   [31:0] tmp17_reg_1303;
wire   [31:0] grp_fu_800_p2;
reg   [31:0] tmp_5_1_3_reg_1308;
wire   [31:0] grp_fu_805_p2;
reg   [31:0] tmp_5_2_3_reg_1313;
wire   [31:0] tmp18_fu_832_p2;
reg   [31:0] tmp18_reg_1318;
wire   [31:0] grp_fu_824_p2;
reg   [31:0] tmp_5_3_3_reg_1323;
wire   [31:0] grp_fu_828_p2;
reg   [31:0] tmp_5_4_3_reg_1328;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage3_subdone;
reg   [3:0] ap_phi_mux_i_phi_fu_479_p4;
wire    ap_block_pp0_stage0;
wire  signed [63:0] tmp_11_cast_fu_619_p1;
wire   [63:0] tmp_12_cast_fu_630_p1;
wire  signed [63:0] tmp_13_cast_fu_640_p1;
wire    ap_block_pp0_stage1;
wire  signed [63:0] tmp_15_cast_fu_650_p1;
wire  signed [63:0] tmp_14_cast_fu_660_p1;
wire    ap_block_pp0_stage2;
wire  signed [63:0] tmp_16_cast_fu_670_p1;
wire   [63:0] tmp_3_cast_fu_810_p1;
wire   [63:0] tmp_4_cast_fu_843_p1;
wire  signed [63:0] tmp_6_cast_fu_853_p1;
wire  signed [63:0] tmp_7_cast_fu_883_p1;
wire    ap_block_pp0_stage3;
wire  signed [63:0] tmp_8_cast_fu_893_p1;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage11;
wire    ap_block_pp0_stage12;
wire    ap_block_pp0_stage13;
wire    ap_block_pp0_stage14;
wire   [31:0] prod_1_0_5_fu_818_p2;
wire   [31:0] prod_1_1_5_fu_862_p2;
wire   [31:0] prod_1_2_5_fu_872_p2;
wire   [31:0] prod_1_3_5_fu_902_p2;
wire   [31:0] prod_1_4_5_fu_912_p2;
wire   [31:0] grp_fu_547_p2;
wire   [5:0] tmp_2_fu_575_p3;
wire   [6:0] tmp_cast_fu_571_p1;
wire   [6:0] p_shl2_cast_fu_583_p1;
wire   [4:0] tmp_s_fu_601_p3;
wire   [6:0] tmp_9_fu_593_p3;
wire   [6:0] p_shl1_cast_fu_609_p1;
wire   [6:0] tmp_11_fu_624_p2;
wire   [6:0] tmp_12_fu_635_p2;
wire   [6:0] tmp_14_fu_645_p2;
wire   [6:0] tmp_13_fu_655_p2;
wire   [6:0] tmp_15_fu_665_p2;
wire   [31:0] tmp6_fu_705_p2;
wire   [31:0] tmp_fu_749_p2;
wire   [31:0] tmp12_fu_782_p2;
wire   [31:0] tmp3_fu_814_p2;
wire   [6:0] tmp_4_fu_838_p2;
wire   [6:0] tmp_6_fu_848_p2;
wire   [31:0] tmp7_fu_858_p2;
wire   [31:0] tmp11_fu_868_p2;
wire   [6:0] tmp_7_fu_878_p2;
wire   [6:0] tmp_8_fu_888_p2;
wire   [31:0] tmp15_fu_898_p2;
wire   [31:0] tmp19_fu_908_p2;
wire    ap_CS_fsm_state21;
reg   [16:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 17'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

prodMat_mul_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
prodMat_mul_32s_3bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_486),
    .din1(A_load_reg_1114),
    .ce(1'b1),
    .dout(grp_fu_502_p2)
);

prodMat_mul_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
prodMat_mul_32s_3bkb_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_490),
    .din1(A_load_1_reg_1122),
    .ce(1'b1),
    .dout(grp_fu_507_p2)
);

prodMat_mul_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
prodMat_mul_32s_3bkb_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_494),
    .din1(A_load_2_reg_1140),
    .ce(1'b1),
    .dout(grp_fu_512_p2)
);

prodMat_mul_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
prodMat_mul_32s_3bkb_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_498),
    .din1(A_load_4_reg_1148),
    .ce(1'b1),
    .dout(grp_fu_517_p2)
);

prodMat_mul_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
prodMat_mul_32s_3bkb_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_490),
    .din1(A_load_5_reg_1165),
    .ce(1'b1),
    .dout(grp_fu_522_p2)
);

prodMat_mul_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
prodMat_mul_32s_3bkb_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_486),
    .din1(A_load_5_reg_1165),
    .ce(1'b1),
    .dout(grp_fu_675_p2)
);

prodMat_mul_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
prodMat_mul_32s_3bkb_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_490),
    .din1(A_load_reg_1114),
    .ce(1'b1),
    .dout(grp_fu_680_p2)
);

prodMat_mul_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
prodMat_mul_32s_3bkb_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_494),
    .din1(A_load_1_reg_1122),
    .ce(1'b1),
    .dout(grp_fu_685_p2)
);

prodMat_mul_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
prodMat_mul_32s_3bkb_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_498),
    .din1(A_load_2_reg_1140),
    .ce(1'b1),
    .dout(grp_fu_690_p2)
);

prodMat_mul_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
prodMat_mul_32s_3bkb_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_486),
    .din1(A_load_4_reg_1148),
    .ce(1'b1),
    .dout(grp_fu_700_p2)
);

prodMat_mul_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
prodMat_mul_32s_3bkb_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_494),
    .din1(A_load_reg_1114),
    .ce(1'b1),
    .dout(grp_fu_714_p2)
);

prodMat_mul_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
prodMat_mul_32s_3bkb_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_498),
    .din1(A_load_1_reg_1122),
    .ce(1'b1),
    .dout(grp_fu_719_p2)
);

prodMat_mul_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
prodMat_mul_32s_3bkb_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_486),
    .din1(A_load_2_reg_1140),
    .ce(1'b1),
    .dout(grp_fu_729_p2)
);

prodMat_mul_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
prodMat_mul_32s_3bkb_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_490),
    .din1(A_load_4_reg_1148),
    .ce(1'b1),
    .dout(grp_fu_734_p2)
);

prodMat_mul_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
prodMat_mul_32s_3bkb_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_494),
    .din1(A_load_5_reg_1165),
    .ce(1'b1),
    .dout(grp_fu_739_p2)
);

prodMat_mul_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
prodMat_mul_32s_3bkb_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_498),
    .din1(A_load_reg_1114),
    .ce(1'b1),
    .dout(grp_fu_744_p2)
);

prodMat_mul_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
prodMat_mul_32s_3bkb_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_486),
    .din1(A_load_1_reg_1122),
    .ce(1'b1),
    .dout(grp_fu_758_p2)
);

prodMat_mul_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
prodMat_mul_32s_3bkb_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_490),
    .din1(A_load_2_reg_1140),
    .ce(1'b1),
    .dout(grp_fu_763_p2)
);

prodMat_mul_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
prodMat_mul_32s_3bkb_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_494),
    .din1(A_load_4_reg_1148),
    .ce(1'b1),
    .dout(grp_fu_772_p2)
);

prodMat_mul_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
prodMat_mul_32s_3bkb_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_498),
    .din1(A_load_5_reg_1165),
    .ce(1'b1),
    .dout(grp_fu_777_p2)
);

prodMat_mul_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
prodMat_mul_32s_3bkb_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_486),
    .din1(A_load_3_reg_1156),
    .ce(1'b1),
    .dout(grp_fu_795_p2)
);

prodMat_mul_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
prodMat_mul_32s_3bkb_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_494),
    .din1(A_load_3_reg_1156),
    .ce(1'b1),
    .dout(grp_fu_800_p2)
);

prodMat_mul_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
prodMat_mul_32s_3bkb_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_498),
    .din1(A_load_3_reg_1156),
    .ce(1'b1),
    .dout(grp_fu_805_p2)
);

prodMat_mul_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
prodMat_mul_32s_3bkb_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(B_load_21_reg_1293),
    .din1(A_load_3_reg_1156),
    .ce(1'b1),
    .dout(grp_fu_824_p2)
);

prodMat_mul_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
prodMat_mul_32s_3bkb_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(B_load_27_reg_1298),
    .din1(A_load_3_reg_1156),
    .ce(1'b1),
    .dout(grp_fu_828_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage14_subdone) & (1'b1 == ap_CS_fsm_pp0_stage14))))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage14_subdone) & (1'b1 == ap_CS_fsm_pp0_stage14)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_1068 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_475 <= i_1_reg_1072;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_475 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_1068 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        A_load_1_reg_1122 <= A_q1;
        A_load_reg_1114 <= A_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_1068 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        A_load_2_reg_1140 <= A_q0;
        A_load_4_reg_1148 <= A_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (exitcond2_reg_1068 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        A_load_3_reg_1156 <= A_q0;
        A_load_5_reg_1165 <= A_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_1068 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        B_load_21_reg_1293 <= B_q0;
        B_load_27_reg_1298 <= B_q1;
        tmp17_reg_1303 <= grp_fu_553_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond2_reg_1068 <= exitcond2_fu_559_p2;
        exitcond2_reg_1068_pp0_iter1_reg <= exitcond2_reg_1068;
        tmp_3_reg_1077_pp0_iter1_reg <= tmp_3_reg_1077;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_1_reg_1072 <= i_1_fu_565_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (exitcond2_reg_1068 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((exitcond2_reg_1068 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)) | ((exitcond2_reg_1068 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((exitcond2_reg_1068 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((exitcond2_reg_1068 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((exitcond2_reg_1068 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((exitcond2_reg_1068 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_486 <= B_q0;
        reg_490 <= B_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((exitcond2_reg_1068 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((exitcond2_reg_1068 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((exitcond2_reg_1068 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((exitcond2_reg_1068 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((exitcond2_reg_1068 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((exitcond2_reg_1068 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((exitcond2_reg_1068 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        reg_494 <= B_q0;
        reg_498 <= B_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (exitcond2_reg_1068 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((exitcond2_reg_1068 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)))) begin
        reg_527 <= grp_fu_502_p2;
        reg_531 <= grp_fu_507_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((exitcond2_reg_1068 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((exitcond2_reg_1068 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)))) begin
        reg_535 <= grp_fu_512_p2;
        reg_539 <= grp_fu_517_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((exitcond2_reg_1068 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((exitcond2_reg_1068 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)))) begin
        reg_543 <= grp_fu_522_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_1068 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001))) begin
        tmp10_reg_1253 <= tmp10_fu_768_p2;
        tmp_5_3_1_reg_1258 <= grp_fu_758_p2;
        tmp_5_3_2_reg_1263 <= grp_fu_763_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_1068 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        tmp13_reg_1278 <= tmp13_fu_786_p2;
        tmp_5_3_4_reg_1268 <= grp_fu_772_p2;
        tmp_5_3_5_reg_1273 <= grp_fu_777_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_1068 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001))) begin
        tmp14_reg_1283 <= tmp14_fu_791_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_1068_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp18_reg_1318 <= tmp18_fu_832_p2;
        tmp_5_1_3_reg_1308 <= grp_fu_800_p2;
        tmp_5_2_3_reg_1313 <= grp_fu_805_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_1068 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        tmp1_reg_1178 <= grp_fu_553_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_1068 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp4_reg_1188 <= tmp4_fu_695_p2;
        tmp_5_1_1_reg_1193 <= grp_fu_685_p2;
        tmp_5_1_2_reg_1198 <= grp_fu_690_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_1068 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        tmp5_reg_1208 <= tmp5_fu_709_p2;
        tmp_5_1_4_reg_1203 <= grp_fu_700_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_1068 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        tmp8_reg_1213 <= tmp8_fu_724_p2;
        tmp_5_2_1_reg_1223 <= grp_fu_719_p2;
        tmp_5_2_reg_1218 <= grp_fu_714_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_1068 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        tmp9_reg_1243 <= tmp9_fu_753_p2;
        tmp_5_2_5_reg_1238 <= grp_fu_739_p2;
        tmp_5_3_reg_1248 <= grp_fu_744_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_559_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_10_reg_1086[6 : 1] <= tmp_10_fu_613_p2[6 : 1];
        tmp_3_reg_1077 <= tmp_3_fu_587_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_1068 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_5_0_3_reg_1288 <= grp_fu_795_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_1068 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        tmp_5_0_5_reg_1173 <= grp_fu_675_p2;
        tmp_5_1_reg_1183 <= grp_fu_680_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_1068 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        tmp_5_2_2_reg_1228 <= grp_fu_729_p2;
        tmp_5_2_4_reg_1233 <= grp_fu_734_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_1068_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        tmp_5_3_3_reg_1323 <= grp_fu_824_p2;
        tmp_5_4_3_reg_1328 <= grp_fu_828_p2;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            A_address0 = tmp_14_cast_fu_660_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            A_address0 = tmp_13_cast_fu_640_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            A_address0 = tmp_11_cast_fu_619_p1;
        end else begin
            A_address0 = 'bx;
        end
    end else begin
        A_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            A_address1 = tmp_16_cast_fu_670_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            A_address1 = tmp_15_cast_fu_650_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            A_address1 = tmp_12_cast_fu_630_p1;
        end else begin
            A_address1 = 'bx;
        end
    end else begin
        A_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        A_ce0 = 1'b1;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        A_ce1 = 1'b1;
    end else begin
        A_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            B_address0 = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            B_address0 = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            B_address0 = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            B_address0 = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            B_address0 = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            B_address0 = 64'd23;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            B_address0 = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            B_address0 = 64'd27;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            B_address0 = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            B_address0 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            B_address0 = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            B_address0 = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            B_address0 = 64'd25;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            B_address0 = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            B_address0 = 64'd0;
        end else begin
            B_address0 = 'bx;
        end
    end else begin
        B_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            B_address1 = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            B_address1 = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            B_address1 = 64'd29;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            B_address1 = 64'd24;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            B_address1 = 64'd9;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            B_address1 = 64'd28;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            B_address1 = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            B_address1 = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            B_address1 = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            B_address1 = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            B_address1 = 64'd26;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            B_address1 = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            B_address1 = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            B_address1 = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            B_address1 = 64'd5;
        end else begin
            B_address1 = 'bx;
        end
    end else begin
        B_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        B_ce0 = 1'b1;
    end else begin
        B_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        B_ce1 = 1'b1;
    end else begin
        B_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            R_address0 = tmp_8_cast_fu_893_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            R_address0 = tmp_4_cast_fu_843_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            R_address0 = tmp_3_cast_fu_810_p1;
        end else begin
            R_address0 = 'bx;
        end
    end else begin
        R_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            R_address1 = tmp_7_cast_fu_883_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            R_address1 = tmp_6_cast_fu_853_p1;
        end else begin
            R_address1 = 'bx;
        end
    end else begin
        R_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        R_ce0 = 1'b1;
    end else begin
        R_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        R_ce1 = 1'b1;
    end else begin
        R_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            R_d0 = prod_1_4_5_fu_912_p2;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            R_d0 = prod_1_1_5_fu_862_p2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            R_d0 = prod_1_0_5_fu_818_p2;
        end else begin
            R_d0 = 'bx;
        end
    end else begin
        R_d0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            R_d1 = prod_1_3_5_fu_902_p2;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            R_d1 = prod_1_2_5_fu_872_p2;
        end else begin
            R_d1 = 'bx;
        end
    end else begin
        R_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (exitcond2_reg_1068_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((exitcond2_reg_1068_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((exitcond2_reg_1068_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        R_we0 = 1'b1;
    end else begin
        R_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (exitcond2_reg_1068_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((exitcond2_reg_1068_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        R_we1 = 1'b1;
    end else begin
        R_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond2_fu_559_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_reg_1068 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_479_p4 = i_1_reg_1072;
    end else begin
        ap_phi_mux_i_phi_fu_479_p4 = i_reg_475;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond2_fu_559_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond2_fu_559_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd16];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign exitcond2_fu_559_p2 = ((ap_phi_mux_i_phi_fu_479_p4 == 4'd10) ? 1'b1 : 1'b0);

assign grp_fu_547_p2 = (reg_535 + reg_531);

assign grp_fu_553_p2 = (reg_527 + grp_fu_547_p2);

assign i_1_fu_565_p2 = (ap_phi_mux_i_phi_fu_479_p4 + 4'd1);

assign p_shl1_cast_fu_609_p1 = tmp_s_fu_601_p3;

assign p_shl2_cast_fu_583_p1 = tmp_2_fu_575_p3;

assign prod_1_0_5_fu_818_p2 = (tmp1_reg_1178 + tmp3_fu_814_p2);

assign prod_1_1_5_fu_862_p2 = (tmp5_reg_1208 + tmp7_fu_858_p2);

assign prod_1_2_5_fu_872_p2 = (tmp9_reg_1243 + tmp11_fu_868_p2);

assign prod_1_3_5_fu_902_p2 = (tmp13_reg_1278 + tmp15_fu_898_p2);

assign prod_1_4_5_fu_912_p2 = (tmp17_reg_1303 + tmp19_fu_908_p2);

assign tmp10_fu_768_p2 = (tmp_5_2_5_reg_1238 + tmp_5_2_4_reg_1233);

assign tmp11_fu_868_p2 = (tmp_5_2_3_reg_1313 + tmp10_reg_1253);

assign tmp12_fu_782_p2 = (tmp_5_3_2_reg_1263 + tmp_5_3_1_reg_1258);

assign tmp13_fu_786_p2 = (tmp_5_3_reg_1248 + tmp12_fu_782_p2);

assign tmp14_fu_791_p2 = (tmp_5_3_5_reg_1273 + tmp_5_3_4_reg_1268);

assign tmp15_fu_898_p2 = (tmp_5_3_3_reg_1323 + tmp14_reg_1283);

assign tmp18_fu_832_p2 = (reg_543 + reg_539);

assign tmp19_fu_908_p2 = (tmp_5_4_3_reg_1328 + tmp18_reg_1318);

assign tmp3_fu_814_p2 = (tmp_5_0_3_reg_1288 + tmp4_reg_1188);

assign tmp4_fu_695_p2 = (tmp_5_0_5_reg_1173 + reg_539);

assign tmp5_fu_709_p2 = (tmp_5_1_reg_1183 + tmp6_fu_705_p2);

assign tmp6_fu_705_p2 = (tmp_5_1_2_reg_1198 + tmp_5_1_1_reg_1193);

assign tmp7_fu_858_p2 = (tmp_5_1_3_reg_1308 + tmp8_reg_1213);

assign tmp8_fu_724_p2 = (reg_543 + tmp_5_1_4_reg_1203);

assign tmp9_fu_753_p2 = (tmp_5_2_reg_1218 + tmp_fu_749_p2);

assign tmp_10_fu_613_p2 = (tmp_9_fu_593_p3 - p_shl1_cast_fu_609_p1);

assign tmp_11_cast_fu_619_p1 = tmp_10_fu_613_p2;

assign tmp_11_fu_624_p2 = (tmp_10_fu_613_p2 | 7'd1);

assign tmp_12_cast_fu_630_p1 = tmp_11_fu_624_p2;

assign tmp_12_fu_635_p2 = ($signed(tmp_10_reg_1086) + $signed(7'd2));

assign tmp_13_cast_fu_640_p1 = $signed(tmp_12_fu_635_p2);

assign tmp_13_fu_655_p2 = ($signed(tmp_10_reg_1086) + $signed(7'd3));

assign tmp_14_cast_fu_660_p1 = $signed(tmp_13_fu_655_p2);

assign tmp_14_fu_645_p2 = ($signed(tmp_10_reg_1086) + $signed(7'd4));

assign tmp_15_cast_fu_650_p1 = $signed(tmp_14_fu_645_p2);

assign tmp_15_fu_665_p2 = ($signed(tmp_10_reg_1086) + $signed(7'd5));

assign tmp_16_cast_fu_670_p1 = $signed(tmp_15_fu_665_p2);

assign tmp_2_fu_575_p3 = {{ap_phi_mux_i_phi_fu_479_p4}, {2'd0}};

assign tmp_3_cast_fu_810_p1 = tmp_3_reg_1077_pp0_iter1_reg;

assign tmp_3_fu_587_p2 = (tmp_cast_fu_571_p1 + p_shl2_cast_fu_583_p1);

assign tmp_4_cast_fu_843_p1 = tmp_4_fu_838_p2;

assign tmp_4_fu_838_p2 = (tmp_3_reg_1077_pp0_iter1_reg + 7'd1);

assign tmp_6_cast_fu_853_p1 = $signed(tmp_6_fu_848_p2);

assign tmp_6_fu_848_p2 = (tmp_3_reg_1077_pp0_iter1_reg + 7'd2);

assign tmp_7_cast_fu_883_p1 = $signed(tmp_7_fu_878_p2);

assign tmp_7_fu_878_p2 = (tmp_3_reg_1077_pp0_iter1_reg + 7'd3);

assign tmp_8_cast_fu_893_p1 = $signed(tmp_8_fu_888_p2);

assign tmp_8_fu_888_p2 = (tmp_3_reg_1077_pp0_iter1_reg + 7'd4);

assign tmp_9_fu_593_p3 = {{ap_phi_mux_i_phi_fu_479_p4}, {3'd0}};

assign tmp_cast_fu_571_p1 = ap_phi_mux_i_phi_fu_479_p4;

assign tmp_fu_749_p2 = (tmp_5_2_2_reg_1228 + tmp_5_2_1_reg_1223);

assign tmp_s_fu_601_p3 = {{ap_phi_mux_i_phi_fu_479_p4}, {1'd0}};

always @ (posedge ap_clk) begin
    tmp_10_reg_1086[0] <= 1'b0;
end

endmodule //prodMat
